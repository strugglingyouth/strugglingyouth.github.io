<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DevOps-田飞雨</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.tianfeiyu.com/"/>
  <updated>2016-07-17T10:50:48.000Z</updated>
  <id>http://www.tianfeiyu.com/</id>
  
  <author>
    <name>田飞雨</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常用Linux系统Debug命令</title>
    <link href="http://www.tianfeiyu.com/2016/07/17/%E5%B8%B8%E7%94%A8Linux%E7%B3%BB%E7%BB%9FDebug%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.tianfeiyu.com/2016/07/17/常用Linux系统Debug命令/</id>
    <published>2016-07-17T10:49:58.000Z</published>
    <updated>2016-07-17T10:50:48.000Z</updated>
    
    <content type="html">&lt;p&gt;1、查看TCP连接状态&lt;br&gt;netstat -nat |awk ‘{print $6}’|sort|uniq -c|sort -rn&lt;br&gt;netstat -n | awk ‘/^tcp/ {++S[$NF]};END {for(a in S) print a, S[a]}’&lt;br&gt;netstat -n | awk ‘/^tcp/ {++state[$NF]}; END {for(key in state) print key,”\t”,state[key]}’&lt;br&gt;netstat -n | awk ‘/^tcp/ {++arr[$NF]};END {for(k in arr) print k,”\t”,arr[k]}’&lt;br&gt;netstat -n |awk ‘/^tcp/ {print $NF}’|sort|uniq -c|sort -rn&lt;br&gt;netstat -ant | awk ‘{print $NF}’ | grep -v ‘[a-z]’ | sort | uniq -c&lt;br&gt;netstat -nat |awk ‘{print $6}’|sort|uniq -c|sort -rn&lt;br&gt;netstat -n | awk ‘/^tcp/ {++S[$NF]};END {for(a in S) print a, S[a]}’&lt;br&gt;netstat -n | awk ‘/^tcp/ {++state[$NF]}; END {for(key in state) print key,”\t”,state[key]}’&lt;br&gt;netstat -n | awk ‘/^tcp/ {++arr[$NF]};END {for(k in arr) print k,”\t”,arr[k]}’&lt;br&gt;netstat -n |awk ‘/^tcp/ {print $NF}’|sort|uniq -c|sort -rn&lt;br&gt;netstat -ant | awk ‘{print $NF}’ | grep -v ‘[a-z]’ | sort | uniq -c&lt;/p&gt;
&lt;p&gt; 2、查找请求80端口最多的20个IP连接&lt;br&gt; netstat -anlp|grep 80|grep tcp|awk ‘{print $5}’|awk -F: ‘{print $1}’|sort|uniq -c|sort -nr|head -n20&lt;br&gt; netstat -ant |awk ‘/:80/{split($5,ip,”:”);++A[ip[1]]}END{for(i in A) print A,i}’ |sort -rn|head -n20&lt;br&gt; tcpdump -i eth0 -tnn dst port 80 -c 1000 | awk -F”.” ‘{print $1”.”$2”.”$3”.”$4}’ | sort | uniq -c | sort -nr |head -n 20&lt;/p&gt;
&lt;p&gt; 3、查找较多time_wait连接&lt;br&gt; netstat -n|grep TIME_WAIT|awk ‘{print $5}’|sort|uniq -c|sort -rn|head -n20&lt;/p&gt;
&lt;p&gt; 4、找查较多的SYN连接&lt;br&gt; netstat -an | grep SYN | awk ‘{print $5}’ | awk -F: ‘{print $1}’ | sort | uniq -c | sort -nr | more&lt;/p&gt;
&lt;p&gt; 5、根据端口列进程&lt;br&gt; netstat -ntlp | grep 80 | awk ‘{print $7}’ | cut -d/ -f1&lt;/p&gt;
&lt;p&gt; 6、获取Web访问前10位的ip地址&lt;br&gt; cat access.log|awk ‘{print $1}’|sort|uniq -c|sort -nr|head -n 10&lt;br&gt; cat access.log|awk ‘{counts[$(11)]+=1}; END {for(url in counts) print counts[url], url}’&lt;/p&gt;
&lt;p&gt; ​7、访问次数最多的文件或页面,取前20&lt;br&gt; cat access.log|awk ‘{print $11}’|sort|uniq -c|sort -nr|head -n 20&lt;/p&gt;
&lt;p&gt; 8、列出传输最大的几个rar文件&lt;br&gt; cat access.log|awk ‘{print $11}’|sort|uniq -c|sort -nr|head -n 20&lt;/p&gt;
&lt;p&gt;  9、列出输出大于200000byte(约200kb)的rar文件以及对应文件发生次数&lt;br&gt;  cat access.log |awk ‘($10 &amp;gt; 200000 &amp;amp;&amp;amp; $7~/.rar/){print $7}’|sort -n|uniq -c|sort -nr|head -n 100&lt;/p&gt;
&lt;p&gt;  10、如果日志最后一列记录的是页面文件传输时间，则有列出到客户端最耗时的页面&lt;br&gt;  cat access.log |awk ‘($7~/.php/){print $NF “ “ $1 “ “ $4 “ “ $7}’|sort -nr|head -n 100&lt;br&gt;  cat access.log |awk ‘($7~/.php/){print $NF “ “ $1 “ “ $4 “ “ $7}’|sort -nr|head -n 100&lt;/p&gt;
&lt;p&gt;  11、列出最最耗时的页面(超过60秒的)的以及对应页面发生次数&lt;br&gt;  cat access.log |awk ‘($NF &amp;gt; 60 &amp;amp;&amp;amp; $7~/.php/){print $7}’|sort -n|uniq -c|sort -nr|head -n 100&lt;/p&gt;
&lt;p&gt;   12、列出传输时间超过 30 秒的文件&lt;br&gt;   cat access.log |awk ‘($NF &amp;gt; 30){print $7}’|sort -n|uniq -c|sort -nr|head -n 20&lt;/p&gt;
&lt;p&gt;   13、统计网站流量（G)&lt;br&gt;   cat access.log |awk ‘{sum+=$10} END {print sum/1024/1024/1024}’&lt;/p&gt;
&lt;p&gt;   14、统计404的连接&lt;br&gt;   awk ‘($9 ~/404/)’ access.log | awk ‘{print $9,$7}’ | sort&lt;/p&gt;
&lt;p&gt;   15、统计http status&lt;br&gt;   cat access.log |awk ‘{counts[$(9)]+=1}; END {for(code in counts) print code, counts[code]}’&lt;br&gt;   cat access.log |awk ‘{print $9}’|sort|uniq -c|sort -rn&lt;/p&gt;
&lt;p&gt;   16、查看是哪些爬虫在抓取内容&lt;br&gt;   tcpdump -i eth0 -l -s 0 -w - dst port 80 | strings | grep -i user-agent | grep -i -E ‘bot|crawler|slurp|spider’&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;17、查看数据库执行的sql语句
tcpdump -i eth0 -s 0 -l -w - dst port 3306 | strings | egrep -i &amp;apos;SELECT|UPDATE|DELETE|INSERT|SET|COMMIT|ROLLBACK|CREATE|DROP|ALTER|CALL&amp;apos;

18、按域统计流量
zcat squid_access.log.tar.gz| awk &amp;apos;{print $10,$7}&amp;apos; |awk &amp;apos;BEGIN{FS=&amp;quot;[ /]&amp;quot;}{trfc[$4]+=$1}END{for(domain in trfc){printf &amp;quot;%s\t%d\n&amp;quot;,domain,trfc[domain]}}&amp;apos;

19、调试命令
strace -p pid

20、磁盘性能
iostat -x 1 10
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;1、查看TCP连接状态&lt;br&gt;netstat -nat |awk ‘{print $6}’|sort|uniq -c|sort -rn&lt;br&gt;netstat -n | awk ‘/^tcp/ {++S[$NF]};END {for(a in S) print a, S[a]
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git 使用指南及高级技巧</title>
    <link href="http://www.tianfeiyu.com/2016/07/14/git-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E5%8F%8A%E9%AB%98%E7%BA%A7%E6%8A%80%E5%B7%A7/"/>
    <id>http://www.tianfeiyu.com/2016/07/14/git-使用指南及高级技巧/</id>
    <published>2016-07-14T06:46:20.000Z</published>
    <updated>2016-07-15T07:08:01.000Z</updated>
    
    <content type="html">&lt;p&gt;###github 详细操作 : &lt;a href=&quot;https://github.com/lavor-zl/Github-Git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/lavor-zl/Github-Git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;##git 高级教程： &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3OTgyMDcwNg==&amp;amp;mid=2650625356&amp;amp;idx=1&amp;amp;sn=32e5a0550b08fab554edb5f31cfd54a5&amp;amp;scene=2&amp;amp;srcid=0608JkN5HRfOV5POEyd2tClo&amp;amp;from=timeline&amp;amp;isappinstalled=0#wechat_redirect&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzA3OTgyMDcwNg==&amp;amp;mid=2650625356&amp;amp;idx=1&amp;amp;sn=32e5a0550b08fab554edb5f31cfd54a5&amp;amp;scene=2&amp;amp;srcid=0608JkN5HRfOV5POEyd2tClo&amp;amp;from=timeline&amp;amp;isappinstalled=0#wechat_redirect&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;##Q:配置用户名和密码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config --global user.name &amp;quot;strugglingyouth&amp;quot;
git config --global user.email &amp;quot;630441839@qq.com&amp;quot;
git config --list
git config --global color.ui true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;##Q: 绑定远程分支，不用每次pull或push时指定&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config branch.master.remote origin
git config branch.master.merge refs/heads/master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;##Q:合并远程分支到当前分支&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git merge origin/master 
# 或者
$ git rebase origin/master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;##Q:删除追踪状态的文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git rm --cached *.pyc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;##Q:今天使用github的pages功能搞了一个blog,用了github提供的主题,当我将其git clone下来的时候,出现:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# On branch master
# Changed but not updated:
    #   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
    #   (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)
    #
    #       modified:   fonts/OpenSans-Bold-webfont.eot
    #       modified:   fonts/OpenSans-Bold-webfont.svg
    #       modified:   fonts/OpenSans-Bold-webfont.ttf
    #       modified:   fonts/OpenSans-Bold-webfont.woff
    #       modified:   fonts/OpenSans-BoldItalic-webfont.eot
    #       modified:   fonts/OpenSans-BoldItalic-webfont.svg
    #       modified:   fonts/OpenSans-BoldItalic-webfont.ttf
    #       modified:   fonts/OpenSans-BoldItalic-webfont.woff
    #       modified:   fonts/OpenSans-Italic-webfont.eot
    #       modified:   fonts/OpenSans-Italic-webfont.svg
    #       modified:   fonts/OpenSans-Italic-webfont.ttf
    #       modified:   fonts/OpenSans-Italic-webfont.woff
    #       modified:   fonts/OpenSans-Regular-webfont.eot
    #       modified:   fonts/OpenSans-Regular-webfont.svg
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;###github 详细操作 : &lt;a href=&quot;https://github.com/lavor-zl/Github-Git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/lavor-zl/Github-Git&lt;/
    
    </summary>
    
    
  </entry>
  
</feed>
